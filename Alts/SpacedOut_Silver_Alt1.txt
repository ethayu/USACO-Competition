import java.util.HashSet;
import java.util.Scanner;

public class SpacedOut_Silver {

    public static void main(String[] args) {

        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        int[][][] bruteforce = new int[(int) Math.pow(2, n * n)][n][n];
        HashSet<Integer> valid = new HashSet<>();

        for (int msk = 0; msk < (1 << (n * n)); msk++) {
            int counter = 0;
            for (int j = 0; j < n * n; j++) {
                if (counter > 2 * n) break;
                if ((msk & (1 << j)) != 0) {
                    bruteforce[msk][j / n][j % n] = 1;
                    counter++;
                }
            }
        }

        for (int i = 0; i < bruteforce.length; i++) {
            boolean works = true;
            outer:
            for (int j = 0; j < n - 1; j++) {
                for (int k = 0; k < n - 1; k++) {
                    if (!((bruteforce[i][j][k] == 1 && bruteforce[i][j + 1][k] == 1 && bruteforce[i][j][k + 1] == 0 && bruteforce[i][j + 1][k + 1] == 0) ||
                            (bruteforce[i][j][k] == 1 && bruteforce[i][j + 1][k] == 0 && bruteforce[i][j][k + 1] == 1 && bruteforce[i][j + 1][k + 1] == 0) ||
                            (bruteforce[i][j][k] == 0 && bruteforce[i][j + 1][k] == 1 && bruteforce[i][j][k + 1] == 1 && bruteforce[i][j + 1][k + 1] == 0) ||
                            (bruteforce[i][j][k] == 1 && bruteforce[i][j + 1][k] == 0 && bruteforce[i][j][k + 1] == 0 && bruteforce[i][j + 1][k + 1] == 1) ||
                            (bruteforce[i][j][k] == 0 && bruteforce[i][j + 1][k] == 1 && bruteforce[i][j][k + 1] == 0 && bruteforce[i][j + 1][k + 1] == 1) ||
                            (bruteforce[i][j][k] == 0 && bruteforce[i][j + 1][k] == 0 && bruteforce[i][j][k + 1] == 1 && bruteforce[i][j + 1][k + 1] == 1))) {
                        works = false;
                        break outer;
                    }
                }
            }
            if (works) valid.add(i);
        }

        int[][] grid = new int[n][n];

        /*for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                grid[i][j] = sc.nextInt();
            }
        }*/

        int sum = 0;

        for (int i : valid) {
            int ret = 0;
            System.out.println();
            for (int j = 0; j < n; j++) {
                for (int k = 0; k < n; k++) {
                    System.out.print(bruteforce[i][j][k] + " ");
                    ret += bruteforce[i][j][k] == 1 ? grid[j][k] : 0;
                }
                System.out.println();
            }
            //sum = Math.max(sum, ret);
            sum++;
        }

        System.out.println(sum);

    }

}
